version: "3.5"

volumes:
  postgres_data:
    driver: local
  data-rabbitmq:
    driver: local
  data-elasticsearch:
    driver: local

services:
  postgres:
    container_name: ztoec-postgres
    image: postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    ports:
      - 5432:5432
    labels:
      - "co.elastic.logs/module=postgresql"
      - "co.elastic.logs/fileset.stdout=access"
      - "co.elastic.logs/fileset.stderr=error"

  rabbitmq:
    image: rabbitmq:management
    restart: always
    container_name: ztoec-rabbitmq
    hostname: 'ztoec-rabbitmq'
    environment:
      - RABBITMQ_DEFAULT_VHOST=households
    ports:
      - 15672:15672
      - 5671:5671
      - 5672:5672
    volumes:
      - data-rabbitmq:/var/lib/rabbitmq

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.9.2
    restart: always
    container_name: ztoec-es
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - data-elasticsearch:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300

  portaineragent:
    image: portainer/agent
    restart: always
    container_name: portainer-agent
    environment:
      CAP_HOST_MANAGEMENT: 1
      AGENT_SECRET: 2020
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    ports:
      - 9001:9001

networks:
  default:
    name: ztoec-erc